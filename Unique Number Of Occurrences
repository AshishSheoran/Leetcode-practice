# EASY

/**
 * @param {number[]} arr
 * @return {boolean}
 */
var uniqueOccurrences = function(arr) {
    let map = new Map();
    
    for(let i of arr) {
        map.set(i, (map.get(i) || 0) +1);
    }
    
    let result = [];
    
    for(let value of map.values()) {
        result.push(value);
    }
    
    let unique = [...new Set(result)];
    
    return unique.length === result.length ? true : false;
};



# JAVA

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        HashMap<Integer, Integer> map = new HashMap<>();
        boolean flag = true;

        for(int n : arr) {
            map.put(n, map.getOrDefault(n, 0) + 1);
        }

        Set unique = new HashSet(map.values());

        if(unique.size() == map.size()) {
            flag = true;
        } else {
            flag = false;
        }

        return flag;
    }
}
